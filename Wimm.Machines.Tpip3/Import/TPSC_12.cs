using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Runtime.InteropServices;

namespace Wimm.Machines.Tpip3.Import
{
    public class TPSC_12
    {
        /// <summary>
        /// TPSC_12.dll Binding generated by P/Invoke Interop Assistant
        /// </summary>
        public partial class NativeMethods
        {
            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_close", CallingConvention = CallingConvention.StdCall)]
            public static extern int open(string ip_adr, int sample_rate,int ch_amount,int buf_sz);
            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_close", CallingConvention = CallingConvention.StdCall)]
            public static extern int close();
            /// Return Type: int
            ///bf: short*
            ///rq_size: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_get_data", CallingConvention = CallingConvention.StdCall)]
            public static extern int get_data(ref short bf, int rq_size);
            /// Return Type: int
            ///bf: short*
            ///rq_size: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_put_data", CallingConvention = CallingConvention.StdCall)]
            public static extern int put_data(ref short bf, int rq_size);


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_get_sample", CallingConvention = CallingConvention.StdCall)]
            public static extern int get_sample();


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_get_ch", CallingConvention = CallingConvention.StdCall)]
            public static extern int get_ch();


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_get_status", CallingConvention = CallingConvention.StdCall)]
            public static extern int get_status();


            /// Return Type: int
            ///sz: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_cnv_b2tm", CallingConvention = CallingConvention.StdCall)]
            public static extern int cnv_b2tm(int sz);


            /// Return Type: int
            ///tm: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_cnv_tm2b", CallingConvention = CallingConvention.StdCall)]
            public static extern int cnv_tm2b(int tm);


            /// Return Type: void
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_clear_sndin_bf", CallingConvention = CallingConvention.StdCall)]
            public static extern void clear_sndin_bf();


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_get_sndin_size", CallingConvention = CallingConvention.StdCall)]
            public static extern int get_sndin_size();


            /// Return Type: int
            ///wait_size: int
            ///wait_tm: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_wait_sndin_size", CallingConvention = CallingConvention.StdCall)]
            public static extern int wait_sndin_size(int wait_size, int wait_tm);


            /// Return Type: int
            ///amp: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_set_sndin_amp", CallingConvention = CallingConvention.StdCall)]
            public static extern int set_sndin_amp(int amp);


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_lock_sndin", CallingConvention = CallingConvention.StdCall)]
            public static extern int lock_sndin();


            /// Return Type: void
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_release_sndin", CallingConvention = CallingConvention.StdCall)]
            public static extern void release_sndin();


            /// Return Type: void
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_clear_sndout_bf", CallingConvention = CallingConvention.StdCall)]
            public static extern void clear_sndout_bf();


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_get_sndout_rsize", CallingConvention = CallingConvention.StdCall)]
            public static extern int get_sndout_rsize();


            /// Return Type: int
            ///wait_rsize: int
            ///wait_tm: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_wait_sndout_rsize", CallingConvention = CallingConvention.StdCall)]
            public static extern int wait_sndout_rsize(int wait_rsize, int wait_tm);


            /// Return Type: int
            ///amp: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_set_sndout_amp", CallingConvention = CallingConvention.StdCall)]
            public static extern int set_sndout_amp(int amp);


            /// Return Type: int
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_lock_sndout", CallingConvention = CallingConvention.StdCall)]
            public static extern int lock_sndout();


            /// Return Type: void
            [DllImport("TPSC_12.dll", EntryPoint = "TPSC_release_sndout", CallingConvention = CallingConvention.StdCall)]
            public static extern void release_sndout();

        }
    }
}
